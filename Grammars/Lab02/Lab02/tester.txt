CIndex <_WindowInfo*> WindowList(10);



bool GenerateMQUI();
void DestroyMQUI();

class SetScreenHook
{
public:
	void SetScreen_Detour(CXStr *pName)
	{
		CHAR Name[MAX_STRING]={0};
		GetCXStr(pName->Ptr,Name,MAX_STRING);
		string WindowName=Name;
		MakeLower((WindowName));

		unsigned long N=WindowMap[WindowName];
		if (N)
		{
			N--;
			_WindowInfo *pWnd = WindowList[N];
			pWnd->pWnd=(CXWnd*)this;
			pWnd->ppWnd=0;
			DebugSpew("Updating WndNotification target '%s'",Name);
		}
		else
		{
			_WindowInfo *pWnd = new _WindowInfo;
			strcpy(pWnd->Name,Name);
			pWnd->pWnd=(CXWnd*)this;
			pWnd->ppWnd=0;
			
			N+=WindowList.GetUnused();
			WindowList[N]=pWnd;

			WindowMap[WindowName]=N+1;
			DebugSpew("Adding WndNotification target '%s'",Name);
		}
		SetScreen_Trampoline(pName);
	}
	void SetScreen_Trampoline(CXStr*);
};
DETOUR_TRAMPOLINE_EMPTY(void SetScreenHook::SetScreen_Trampoline(CXStr*));